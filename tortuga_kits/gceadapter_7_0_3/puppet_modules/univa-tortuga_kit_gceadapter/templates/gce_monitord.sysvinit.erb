#!/bin/bash

# Copyright 2008-2018 Univa Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
#	/etc/rc.d/init.d/gce_monitord
#
# Starts Tortuga Google Compute Engine resource adapter support daemon
#
# chkconfig: 345 98 98
# description: Start Tortuga Google Compute Engine resource adapter support daemon
# processname: gce_monitord

### BEGIN INIT INFO
# Provides: gce_monitord
# Required-Start: $local_fs
# Required-Stop: $local_fs
# Default-Start:  2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: start and stop Tortuga Google Compute Engine resource adapter support daemon
# Description: start and stop Tortuga Google Compute Engine resource adapter support daemon
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

# Source tortuga environment
TORTUGA_ROOT=<%= @instroot %>

. $TORTUGA_ROOT/etc/tortuga.sh

DAEMON_CMD=${TORTUGA_ROOT}/bin/gce_monitord
DAEMON_NAME="Tortuga Google Compute Engine resource adapter support daemon"
PIDFILE=/var/run/gce_monitord.pid
# For http
DAEMON_ARGS="--daemon --pidfile $PIDFILE"

RETVAL=0

#
# See how we were called.
#

start() {
	# Check that we're a privileged user
	[ `id -u` = 0 ] || exit 4

	# Check if program is executable
	test -x ${DAEMON_CMD} || exit 5

	# Check if it is already running
        status -p $PIDFILE > /dev/null 2>&1
	if [ $? -ne 0 ]; then
            echo -n $"Starting $DAEMON_NAME daemon: "
	    ${DAEMON_CMD} ${DAEMON_ARGS}
	    RETVAL=$?
	    [ $RETVAL -eq 0 ] &&  success $"$DAEMON_NAME startup" || failure $"$DAEMON_NAME startup"
	    echo
	fi
	return $RETVAL
}

stop() {
        status -p $PIDFILE > /dev/null 2>&1
        if [ $? -eq 0 ]; then
	    echo -n $"Stopping $DAEMON_NAME daemon: "
            PID=`cat $PIDFILE`
            kill $PID
	    RETVAL=$?
	    [ $RETVAL -eq 0 ] && rm -f $PIDFILE && success $"$DAEMON_NAME shutdown" || failure $"$DAEMON_NAME shutdown"
	    echo
        fi
        return $RETVAL
}


restart() {
	stop
	start
}

case "$1" in
start)
	start
	;;
stop)
	stop
	;;
restart)
	restart
	;;
status)
	status -p $PIDFILE $0

	RETVAL=$?
	;;
*)
	echo $"Usage: $0 {start|stop|status|restart}"
	RETVAL=2
esac

exit $RETVAL
